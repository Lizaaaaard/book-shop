// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "S. King",
                            ReleaseDate = new DateTime(1999, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Green Mile"
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "A. C. Doyle",
                            ReleaseDate = new DateTime(1901, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Hound of Baskervilles"
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "J. London",
                            ReleaseDate = new DateTime(1909, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Martin Eden"
                        },
                        new
                        {
                            Id = 4,
                            AuthorName = "R. L. Stevenson",
                            ReleaseDate = new DateTime(1883, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Treasure island"
                        },
                        new
                        {
                            Id = 5,
                            AuthorName = "M. Mitchell",
                            ReleaseDate = new DateTime(1936, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Gone with the Wind"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OrderBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            OrderDate = new DateTime(2023, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            OrderDate = new DateTime(2023, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 4,
                            OrderDate = new DateTime(2023, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            OrderDate = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 3,
                            OrderDate = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 1,
                            OrderDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 4,
                            OrderDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 3
                        },
                        new
                        {
                            Id = 8,
                            BookId = 5,
                            OrderDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 2,
                            OrderDate = new DateTime(2023, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 4
                        },
                        new
                        {
                            Id = 10,
                            BookId = 5,
                            OrderDate = new DateTime(2023, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.OrderBook", b =>
                {
                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany("OrderBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Navigation("OrderBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
